same [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBZ lpw=is lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=VBN lbnw=exposed rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=among lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBN lpw=caused lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsNN,NNS]
same [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBG lpw=causing lnt=, lnw=, lbnt=WDT lbnw=that rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=stopped lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=JJ rbnw=likely htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=NNP lnw=New lbnt=NNP lbnw=New rpt=, rpw=, rnt=. rnw=. rbnt=JJ rbnw=likely htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=JJ rbnw=likely htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBP lnw=appear lbnt=VBP lbnw=appear rpt=, rpw=, rnt=. rnw=. rbnt=JJ rbnw=likely htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=reported lnt=IN lnw=ago lbnt=IN lbnw=ago rpt=, rpw=, rnt=. rnw=. rbnt=JJ rbnw=likely htsNN,NN]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=Although lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=. rnw=. rbnt=JJ rbnw=likely htsNNS,NN]
same [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Among lnt=, lnw=, lbnt=WP lbnw=who rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=from lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBG lpw=including lnt=RBR lnw=more lbnt=RBR lbnw=more rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=regulate lnt=RBR lnw=more lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=that lnt=MD lnw=should lbnt=MD lbnw=should rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=RB lnw=probably lbnt=RB lbnw=probably rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=TO lpw=to lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=WDT lnw=that lbnt=WDT lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=JJ lbnw=such rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=for lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=have lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=WDT lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=is lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=explained rbnt=VBD rbnw=explained htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=imposed rbnt=VBD rbnw=imposed htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=By lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=IN rbnw=of htsCD,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=contracted lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=contracted lbnt=VBD lbnw=contracted rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw='s lnt=, lnw=, lbnt=IN lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
same [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=reached lnt=. lnw=. lbnt=IN lbnw=for rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBP lpw=watch lnt=RB lnw=closely lbnt=RB lbnw=closely rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=because lnt=VBP lnw=watch lbnt=VBP lbnw=watch rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=be lnt=IN lnw=because lbnt=IN lbnw=because rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=for lnt=, lnw=, lbnt=JJ lbnw=open rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=reached lbnt=IN lbnw=for rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=said lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=`` rnw=`` rbnt=`` rbnw=`` htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=`` rnw=`` rbnt=`` rbnw=`` htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=continue rbnt=VBP rbnw=continue htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBP rnw=continue rbnt=VBP rbnw=continue htsNNS,NNS]
same [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=had lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=was lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=succeeds lbnt=VBZ lbnw=succeeds rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=makes lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=issue lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RB lpw=n't lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=typically rbnt=RB rbnw=typically htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBZ lpw='s lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=RB rnw=typically rbnt=RB rbnw=typically htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBG rnw=manufacturing rbnt=VBG rbnw=manufacturing htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBZ lpw='s lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=VBG rnw=manufacturing rbnt=VBG rbnw=manufacturing htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=joined rbnt=VBD rbnw=joined htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=raced rbnt=IN rbnw=of htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=hauled rbnt=VBD rbnw=hauled htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=RP lpw=out lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=After lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=drooled rbnt=VBD rbnw=drooled htsNN,NNS]
diff [default sim.unknown gen.unknown num.compatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=pointed rbnt=VBD rbnw=pointed htsNNS,NNS]
diff [default sim.unknown gen.unknown num.compatible lpt=PRP lpw=them lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=fed lnt=NNP lnw=Indiana lbnt=NNP lbnw=Indiana rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=VBD lnw=fed lbnt=VBD lbnw=fed rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=fed lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=VBD lnw=fed lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=Under lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBP lpw=eat lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=gave rbnt=VBD rbnw=gave htsCD,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=DT rbnw=this htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=showed lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=DT rbnw=this htsNN,NN]
diff [default sim.unknown gen.compatible num.unknown lpt=IN lpw=by lnt=VBD lnw=showed lbnt=VBD lbnw=showed rpt=, rpw=, rnt=, rnw=, rbnt=DT rbnw=this htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=showed lbnt=IN lbnw=by rpt=, rpw=, rnt=, rnw=, rbnt=DT rbnw=this htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=IN lnw=while lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsCD,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=in lnt=VBD lnw=stood lbnt=VBD lbnw=stood rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=stood lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=from lnt=VBZ lnw=is lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=IN lbnw=from rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=between lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=at lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBN lpw=become lnt=CC lnw=and lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=increasing lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=NNS lpw=advertisers lnt=VBP lnw=have lbnt=IN lbnw=for rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBP lpw=give lnt=NNS lnw=discounts lbnt=NNS lbnw=discounts rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=have lbnt=WDT lbnw=that rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=between lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=Time rbnt=NNP rbnw=Time htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=lowered rbnt=VBD rbnw=lowered htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=ad rbnt=NN rbnw=ad htsNN,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=VBD lpw=totaled lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsCD,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=NN lnw=ad lbnt=NN lbnw=ad rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=: lpw=; lnt=VBD lnw=totaled lbnt=VBD lbnw=totaled rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=: lnw=; lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=RP lpw=up lnt=: lnw=; lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RB lpw=not lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=said lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=had rbnt=, rbnw=, htsNNP,NNP]
same [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=had lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsRB,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=had lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=CC lpw=and lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=values lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=values lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=VBG lpw=raising lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=seemed rbnt=VBD rbnw=seemed htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=asserted rbnt=VBD rbnw=asserted htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=complicated lnt=, lnw=, lbnt=IN lbnw=with rpt=, rpw=, rnt=VBD rnw=asserted rbnt=VBD rbnw=asserted htsNNS,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsCD,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=JJ lnw=old lbnt=JJ lbnw=old rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=BOS lpw=BOS lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBP lpw=succeed lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=succeed lbnt=VBP lbnw=succeed rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=VBP lpw=succeed lnt=IN lnw=on lbnt=IN lbnw=on rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=succeed lbnt=VBP lbnw=succeed rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NN lpw=trading lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=closed rbnt=VBD rbnw=closed htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=near lnt=VBD lnw=was lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=was lbnt=IN lbnw=near rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=ruled rbnt=VBD rbnw=ruled htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=added rbnt=VBD rbnw=added htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=set rbnt=VBD rbnw=set htsNN,NNP]
same [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=VBD lpw=rose lnt=IN lnw=from lbnt=IN lbnw=from rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=VBD lnw=rose lbnt=VBD lbnw=rose rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=BOS lpw=BOS lnt=JJ lnw=domestic lbnt=JJ lbnw=domestic rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=BOS lpw=BOS lnt=VBD lnw=rose lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=Association rbnt=NNP rbnw=Association htsNN,NNPS]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=NNP rnw=Association rbnt=NNP rbnw=Association htsNN,NNPS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=VB lpw=meet lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=NN lnw=chairman lbnt=NN lbnw=chairman rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=on lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=VBZ lnw=appears lbnt=VBZ lbnw=appears rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=as lnt=VBZ lnw=appears lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=BOS lpw=BOS lnt=VBZ lnw=appears lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=PRP rbnw=it htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt='' lpw='' lnt=NN lnw=chief lbnt=NN lbnw=chief rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt='' lpw='' lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=said lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Besides lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=include rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNN,NNP]
same [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=RP lpw=out lnt=IN lnw=in lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNN,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=VBZ lpw=has lnt=CC lnw=and lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNN,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=. lpw=. lnt=RB lnw=also lbnt=RB lbnw=also rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=JJ lnw=Big lbnt=JJ lbnw=Big rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsCD,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=with lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=with lnt=. lnw=. lbnt=. lbnw=. rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=RB lnw=also lbnt=RB lbnw=also rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=JJ lnw=Big lbnt=JJ lbnw=Big rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=with lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=RB lnw=also lbnt=RB lbnw=also rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=-- lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
same [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=between lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=. lnw=. lbnt=VBN lbnw=priced rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBP lpw=are lnt=. lnw=. lbnt=IN lbnw=for rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=VBZ lnw=believes lbnt=VBZ lbnw=believes rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.unknown gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=Under lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Without lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=he htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=IN lnw=as lbnt=IN lbnw=as rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=he htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=he htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=he htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=as lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=Besides lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=includes rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsCD,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=includes lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=, rbnw=, htsCD,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=, rbnw=, htsCD,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsCD,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsCD,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsCD,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBZ lpw=includes lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=at lnt=VBZ lnw=includes lbnt=VBZ lbnw=includes rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=includes lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=Besides lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBZ lpw=includes lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=at lnt=VBZ lnw=includes lbnt=VBZ lbnw=includes rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=includes lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=Besides lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBN lpw=named lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=JJ lnw=old lbnt=JJ lbnw=old rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=removed lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=announced rbnt=VBD rbnw=announced htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=announced rbnt=VBD rbnw=announced htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=Under lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=could rbnt=MD rbnw=could htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=VBG rbnw=specializing htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=through lnt=NN lnw=spokesman lbnt=NN lbnw=spokesman rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=through lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=JJ lnw=external lbnt=JJ lbnw=external rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=reach lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=During lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=NN lpw=year lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=led lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
same [default sim.compatible gen.compatible num.unknown lpt=. lpw=. lnt=VBD lnw=were lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=did lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=annually rbnt=RB rbnw=annually htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=NN lnw=president lbnt=NN lbnw=president rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=NNP lnw=Southern lbnt=NNP lbnw=Southern rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NNP lpw=Hutton lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=decided rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=Following lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=decided rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNPS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsCD,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=totaled lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=VBD lnw=totaled lbnt=VBD lbnw=totaled rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=WDT lnw=that lbnt=WDT lbnw=that rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=totaled lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=totaled lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=BOS lpw=BOS lnt=JJ lnw=chief lbnt=JJ lbnw=chief rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=JJ lnw=resigned lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=NN lnw=chairman lbnt=NN lbnw=chairman rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBZ lnw=is lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=NNP lpw=Exchange lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=closed rbnt=VBD rbnw=closed htsNN,NNS]
same [default sim.compatible gen.compatible num.unknown lpt=. lpw=. lnt=VBD lnw=resigned lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NN lpw=officer lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=JJ lnw=last lbnt=JJ lbnw=last rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=by lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.unknown gen.unknown num.unknown lpt=VB lpw=direct lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=VBD lpw=said lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.incompatible num.unknown some.incompatible lpt=. lpw=. lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
same [default sim.compatible gen.unknown num.compatible lpt=BOS lpw=BOS lnt=VBD lnw=was lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=totaling lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=RP lpw=up lnt=, lnw=, lbnt=VBG lbnw=totaling rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBP lpw=show lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=chairman rbnt=NN rbnw=chairman htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBP lpw=show lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=NN rnw=chairman rbnt=NN rbnw=chairman htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=NN lnw=chairman lbnt=NN lbnw=chairman rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBP lpw=show lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=show lbnt=VBP lbnw=show rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=snapped rbnt=VBD rbnw=snapped htsNN,NNS]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=by lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBG lpw=addressing lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=was lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=until lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=said lnt=VBD lnw=agreed lbnt=VBD lbnw=agreed rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=BOS lpw=BOS lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=. lnw=. lbnt=JJ lbnw=outstanding rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=began lnt=$ lnw=$ lbnt=$ lbnw=$ rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=began lnt=. lnw=. lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=through lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=BOS lpw=BOS lnt=NNS lnw=reserves lbnt=NNS lbnw=reserves rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=Pick lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=: lpw=: lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNN,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=VBG lpw=sweeping lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NNS lpw=regulators lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=DT lnw=this lbnt=DT lbnw=this rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NNS lpw=regulators lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=DT lnw=this lbnt=DT lbnw=this rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=launch rbnt=NN rbnw=launch htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=DT rbnw=a htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=. lnw=. lbnt=IN lbnw=by rpt=: rpw=-- rnt=. rnw=. rbnt=DT rbnw=a htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=NN lnw=launch lbnt=NN lbnw=launch rpt=: rpw=-- rnt=. rnw=. rbnt=DT rbnw=a htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=MD lnw=will lbnt=MD lbnw=will rpt=: rpw=-- rnt=. rnw=. rbnt=DT rbnw=a htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=DT rbnw=a htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=quips lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=RP lpw=about lnt=. lnw=? lbnt=. lbnw=? rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=`` lpw=`` lnt=VBZ lnw='s lbnt=VBZ lbnw='s rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RP lpw=about lnt=. lnw=? lbnt=. lbnw=? rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=`` lpw=`` lnt=VBZ lnw='s lbnt=VBZ lbnw='s rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBZ lnw=runs lbnt=VBZ lbnw=runs rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=RB lpw=before lnt=VBZ lnw=runs lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=stake lnt=NNS lnw=claims lbnt=NNS lbnw=claims rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsPRP$,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=stake lnt='' lnw='' lbnt='' lbnw='' rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBZ lnw=runs lbnt=VBZ lbnw=runs rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RB lpw=before lnt=VBZ lnw=runs lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=stake lnt=NNS lnw=claims lbnt=NNS lbnw=claims rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=stake lnt='' lnw='' lbnt='' lbnw='' rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=over lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NNS]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=plunged rbnt=VBD rbnw=plunged htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=currently rbnt=RB rbnw=currently htsNN,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=RB rnw=currently rbnt=RB rbnw=currently htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=WDT lbnw=that rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=WDT lbnw=that rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNNS,NNS]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=suggests rbnt=VBZ rbnw=suggests htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBP lpw=reflect lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=suggests rbnt=VBZ rbnw=suggests htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=buy lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNNS,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=WP lbnw=who rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNNS,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=VB lpw=buy lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=Mr. rbnt=NNP rbnw=Mr. htsNNS,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=WP lbnw=who rpt=, rpw=, rnt=NNP rnw=Mr. rbnt=NNP rbnw=Mr. htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=VBD lbnw=owed rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=about lnt=, lnw=, lbnt=IN lbnw=by rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=holding lnt=, lnw=, lbnt=IN lbnw=about rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=after lnt=, lnw=, lbnt=IN lbnw=with rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=IN lpw=Under lnt=PRP lnw=it lbnt=, lbnw=, rpt=, rpw=, rnt=PRP rnw=it rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNNS,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=IN rbnw=for htsNNP,NN]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=said lbnt=IN lbnw=for rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=By lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=By lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=JJ rnw=industrial rbnt=JJ rbnw=industrial htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsNNP,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=VBD lpw=fell lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=VBD lpw=said lnt=VBD lnw=fell lbnt=VBD lbnw=fell rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsNNS,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=: lpw=: lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsPRP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=on lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=had lnt=: lnw=: lbnt=IN lbnw=on rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CC lpw=But lnt=NN lnw=factory lbnt=NN lbnw=factory rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=since htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=Excluding lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=declined rbnt=VBD rbnw=declined htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=predicted lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=ran rbnt=VBD rbnw=ran htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=ran rbnt=VBD rbnw=ran htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=VBG lpw=signaling lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=indicate lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=Although lnt=NN lnw=index lbnt=NN lbnw=index rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=IN lnw=at lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=NN lnw=survey lbnt=NN lbnw=survey rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VBG lpw=signaling lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsPRP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=indicate lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=Although lnt=NN lnw=index lbnt=NN lbnw=index rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=IN lnw=at lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=NN lnw=survey lbnt=NN lbnw=survey rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VBG lpw=signaling lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=indicate lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=Although lnt=NN lnw=index lbnt=NN lbnw=index rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=polled rbnt=VBD rbnw=polled htsNN,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=WP lbnw=who rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=prove lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsNN,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=`` lpw=`` lnt='' lnw='' lbnt='' lbnw='' rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=`` lnw=`` lbnt=`` lbnw=`` rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=IN rbnw=on htsCD,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=from lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBP rnw=have rbnt=IN rbnw=on htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=texture rbnt=NN rbnw=texture htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=should rbnt=IN rbnw=of htsNN,NN]
same [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=NN lpw=hero lnt=NN lnw=phone lbnt=NN lbnw=phone rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NN lpw=hero lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=offers lnt=NNP lnw=God lbnt=NNP lbnw=God rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBZ lpw=meets lnt=: lnw=; lbnt=WP lbnw=who rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBZ lpw=meets lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Along lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=. lnw=. lbnt=WP lbnw=who rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=NN lpw=hero lnt=NN lnw=phone lbnt=NN lbnw=phone rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NN lpw=hero lnt=: lnw=; lbnt=: lbnw=; rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=offers lnt=NNP lnw=God lbnt=NNP lbnw=God rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBZ lpw=meets lnt=: lnw=; lbnt=WP lbnw=who rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBZ lpw=meets lnt=. lnw=. lbnt=. lbnw=. rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Along lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt='' rbnw='' htsNN,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=`` lpw=`` lnt=NNP lnw=Gotta lbnt=NNP lbnw=Gotta rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=`` lnw=`` lbnt=`` lbnw=`` rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=POS lpw='s lnt=, lnw=, lbnt='' lbnw='' rpt=, rpw=, rnt=VBP rnw=give rbnt=VBP rbnw=give htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=give rbnt=VBP rbnw=give htsCD,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=describes lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsPRP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=RB lnw=once lbnt=RB lbnw=once rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=JJ lnw=personal lbnt=JJ lbnw=personal rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsPRP$,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=RB lnw=even lbnt=RB lbnw=even rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=RB lnw=even lbnt=IN lbnw=of rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=: lnw=; lbnt=: lbnw=; rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBP lpw=sidestep lnt=: lnw=; lbnt=IN lbnw=of rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=since lnt=RB lnw=honorably lbnt=RB lbnw=honorably rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsPRP,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=: lnw=; lbnt=: lbnw=; rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=on lnt=: lnw=; lbnt=IN lbnw=of rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=: lpw=; lnt=VBZ lnw=expands lbnt=VBZ lbnw=expands rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.unknown gen.unknown num.compatible lpt=TO lpw=to lnt=: lnw=; lbnt=: lbnw=; rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBP lpw=return lnt=TO lnw=to lbnt=TO lbnw=to rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=: lnt=RB lnw=politely lbnt=RB lbnw=politely rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNS]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=with lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=than lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=decide rbnt=VBP rbnw=decide htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBP rnw=decide rbnt=VBP rbnw=decide htsNNS,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=describes rbnt=VBZ rbnw=describes htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=see lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=making lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=committed lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=after lnt=VBD lnw=committed lbnt=VBD lbnw=committed rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=from lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=took lnt=IN lnw=from lbnt=IN lbnw=from rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=But lnt=RB lnw=ultimately lbnt=RB lbnw=ultimately rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=worked lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=requires rbnt=VBZ rbnw=requires htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=entering lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=during lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=launched rbnt=, rbnw=, htsNNP,NNP]
same [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=VBD lnw=launched lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=began rbnt=VBD rbnw=began htsNNP,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=VB lpw=join lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=back lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=through lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBN lpw=become lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=have lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=including lnt=, lnw=, lbnt=IN lbnw=with rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=had lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=terminated rbnt=VBD rbnw=terminated htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=VBD rnw=terminated rbnt=VBD rbnw=terminated htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=parliament rbnt=NN rbnw=parliament htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=NN rnw=parliament rbnt=NN rbnw=parliament htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=authorized rbnt=VBD rbnw=authorized htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBG lpw=ending lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=authorized rbnt=VBD rbnw=authorized htsNN,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=showed rbnt=IN rbnw=in htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=After lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=showed rbnt=IN rbnw=in htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
same [default sim.compatible gen.unknown num.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=below lnt=. lnw=. lbnt=VBN lbnw=registered rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=-- lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=NNS lpw=weddings lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=JJ lnw=last lbnt=JJ lbnw=last rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNS]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=VBP lpw=are lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNS]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBP lpw=are lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=As lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=shot rbnt=VBD rbnw=shot htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=shot rbnt=VBD rbnw=shot htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=shot rbnt=VBD rbnw=shot htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=as lnt=, lnw=, lbnt=IN lbnw=at rpt=, rpw=, rnt=VBD rnw=shot rbnt=VBD rbnw=shot htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=about lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt='' lpw='' lnt=. lnw=. lbnt=IN lbnw=about rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=shot lbnt=VBD lbnw=shot rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=contained lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=contained lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=Artist rbnt=NNP rbnw=Artist htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=seem rbnt=IN rbnw=of htsNNP,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=RB lpw=not lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=VBG rbnw=selling htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=load lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=dreamed rbnt=VBD rbnw=dreamed htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=with lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=ends lbnt=VBZ lbnw=ends rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=RB lpw=Yet lnt=VBZ lnw=carries lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=needed rbnt=VBD rbnw=needed htsNNS,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=needed rbnt=VBD rbnw=needed htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=needed rbnt=VBD rbnw=needed htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=needed rbnt=VBD rbnw=needed htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=was lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=buy lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=-LRB- rbnw=( htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=could rbnt=MD rbnw=could htsCD,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsCD,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=NN lpw=attention lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=get lnt=NN lnw=attention lbnt=NN lbnw=attention rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=get lnt=DT lnw=these lbnt=DT lbnw=these rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=: lnt=VBZ lnw=fills lbnt=VBZ lbnw=fills rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=NN lnw=campaign lbnt=NN lbnw=campaign rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=RB lpw=then lnt=RB lnw=really lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=charges rbnt=VBZ rbnw=charges htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=`` lnw=`` lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=finally rbnt=, rbnw=, htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=TV rbnt=NN rbnw=TV htsNNS,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=NN lnw=TV lbnt=NN lbnw=TV rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=RB lnw=finally lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=NN lnw=campaign lbnt=NN lbnw=campaign rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=talks rbnt=VBZ rbnw=talks htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=Against lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=talks rbnt=VBZ rbnw=talks htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=from lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=continues rbnt=VBZ rbnw=continues htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=wants rbnt=VBZ rbnw=wants htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=On lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=wants rbnt=VBZ rbnw=wants htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=prompted lnt=TO lnw=to lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=prompted lbnt=VBD lbnw=prompted rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=used htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=used htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=but lnt=VBD lnw=did lbnt=VBD lbnw=did rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=used htsPRP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=NN lpw=legislation lnt=RB lnw=ago lbnt=RB lbnw=ago rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=used htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=introduce lnt=CD lnw=17 lbnt=CD lbnw=17 rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=used htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBG lpw=being lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=`` lpw=`` lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=By lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=were rbnt=VBD rbnw=were htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=NN lnw=rival lbnt=NN lbnw=rival rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=featuring lnt=CC lnw=and lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=featuring lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=aired lnt=. lnw=. lbnt=VBG lbnw=featuring rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=: lpw=: lnt=VBD lnw=began lbnt=VBD lbnw=began rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=fills rbnt=VBZ rbnw=fills htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=? lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=appeared rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=appeared rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBD rnw=appeared rbnt=IN rbnw=of htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=WRB lpw=whereby lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=, lnw=, lbnt=WRB lbnw=whereby rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=`` lnw=`` lbnt=`` lbnw=`` rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=approved rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=Board rbnt=NNP rbnw=Board htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=approved lnt=IN lnw=in lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=NNP lnw=Board lbnt=NNP lbnw=Board rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=approved lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNNP,NNS]
diff [default sim.unknown gen.compatible num.unknown lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNNP,NN]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=JJ lbnw=such rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=encourages rbnt=VBZ rbnw=encourages htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBZ rnw=encourages rbnt=VBZ rbnw=encourages htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=concentrated rbnt=VBD rbnw=concentrated htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=capture lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=offend lnt=JJS lnw=largest lbnt=JJS lbnw=largest rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=offend lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=RB lbnw=not rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=`` lnw=`` lbnt=`` lbnw=`` rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=spur lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=might rbnt=MD rbnw=might htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=as lnt=. lnw=. lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=RB lnw=as lbnt=RB lbnw=as rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VB lpw=include lnt=. lnw=. lbnt=RB lbnw=as rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=IN lbnw=of rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=RB lnw=as lbnt=RB lbnw=as rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=-- lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=RB lnw=as lbnt=RB lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=-- lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=RB lnw=as lbnt=RB lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=-- lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=RB lnw=as lbnt=RB lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=include lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNPS]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=DT rnw=this rbnt=DT rbnw=this htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=is lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=JJS rbnw=largest htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=expand lnt=NNS lnw=functions lbnt=NNS lbnw=functions rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=expand lnt=, lnw=, lbnt='' lbnw='' rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=that lbnt=IN lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=IN lnw=that lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw='s lnt=, lnw=, lbnt=IN lbnw=on rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=sew lnt=RP lnw=up lbnt=RP lbnw=up rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=want lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=`` lpw=`` lnt=VBP lnw=do lbnt=VBP lbnw=do rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=surrendered rbnt=VBD rbnw=surrendered htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=At lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=surrendered rbnt=VBD rbnw=surrendered htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=VBD rbnw=had htsNN,NN]
same [default sim.compatible gen.unknown num.unknown lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VB lpw=raise lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.compatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=on lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=VBZ lpw=is lnt=, lnw=, lbnt=IN lbnw=on rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=concluded rbnt=VBD rbnw=concluded htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=VBD lnw=concluded lbnt=IN lbnw=for rpt=, rpw=, rnt=VBD rnw=concluded rbnt=VBD rbnw=concluded htsNNPS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=concluded lbnt=VBN lbnw=released rpt=, rpw=, rnt=VBD rnw=concluded rbnt=VBD rbnw=concluded htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNS,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=After lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNS,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=VBG lpw=using lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=-- rbnt=: rbnw=-- htsPRP,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=Under lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=bring lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=VB lpw=bring lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=bring lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=-- lnt=. lnw=. lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=bring lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=VB lpw=bring lnt=. lnw=. lbnt=: lbnw=-- rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=Says lnt=NN lnw=founder lbnt=NN lbnw=founder rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=Says lnt=VBG lnw=prosecuting lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt='' lpw='' lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=including lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBG lpw=including lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=JJ rnw=winning rbnt=JJ rbnw=winning htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=VBD rbnw=had htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=cutting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=VBG lbnw=cutting rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=bled rbnt=VBD rbnw=bled htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=became lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBG lpw=Being lnt=RB lnw=just lbnt=RB lbnw=just rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=loved lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=improve lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=worked rbnt=VBD rbnw=worked htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=taught rbnt=VBD rbnw=taught htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=taught lnt=. lnw=. lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNS,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=taught lbnt=VBD lbnw=taught rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=RB lnw=also lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=IN lnw=than lbnt=IN lbnw=than rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=taught lnt=JJR lnw=more lbnt=JJR lbnw=more rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBD lnw=taught lbnt=VBD lbnw=taught rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNN,NNS]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=RB lnw=just lbnt=RB lbnw=just rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=over lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=IN lnw=over lbnt=IN lbnw=over rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=in lbnt=IN lbnw=in rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=meant lnt=. lnw=. lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=VBD lnw=meant lbnt=VBD lbnw=meant rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsCD,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=by lnt=NNS lnw=students lbnt=NNS lbnw=students rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsPRP$,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=by lnt=IN lnw=in lbnt=IN lbnw=in rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=meant lbnt=IN lbnw=by rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNNS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=insists rbnt=VBZ rbnw=insists htsPRP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNNP,NNP]
same [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=were lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNN,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=VB lpw=help lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=that lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=defeats lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=On lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=read rbnt=VBD rbnw=read htsNN,NNS]
same [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBZ lpw=Says lnt=`` lnw=`` lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=against lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=IN lbnw=against rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNN,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=VBD lpw=touched lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=? lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNNS,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNPS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNPS,NNP]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNPS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNPS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=NN lnw=parent lbnt=NN lbnw=parent rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
same [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=IN lpw=of lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNPS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNPS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=VBP lpw=say lnt=NNS lnw=kids lbnt=NNS lbnw=kids rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBP lpw=say lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBZ lpw=aces lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=WRB lpw=when lnt=VBZ lnw=aces lbnt=VBZ lbnw=aces rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=give lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNPS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBP lpw=say lnt=NNS lnw=kids lbnt=NNS lbnw=kids rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsPRP$,NNPS]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=VBP lpw=say lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNPS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=aces lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNPS]
diff [default sim.compatible gen.unknown num.compatible lpt=WRB lpw=when lnt=VBZ lnw=aces lbnt=VBZ lbnw=aces rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNPS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNN,NNPS]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNPS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=give lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNS,NNPS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNNP,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=for lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=WDT rbnw=that htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=for lbnt=IN lbnw=for rpt=, rpw=, rnt=, rnw=, rbnt=WDT rbnw=that htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=says lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=WDT rbnw=that htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=concluded lbnt=VBD lbnw=concluded rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=-- lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=NN lpw=are lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=WRB lbnw=where rpt=, rpw=, rnt=VBD rnw=noted rbnt=VBD rbnw=noted htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=purchased rbnt=VBD rbnw=purchased htsCD,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=tried rbnt=VBD rbnw=tried htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=about lnt=NNS lnw=applications lbnt=NNS lbnw=applications rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=about lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=make lnt=, lnw=, lbnt=IN lbnw=about rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=be lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=into lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=over lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=IN lbnw=over rpt=, rpw=, rnt=MD rnw=will rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBP lpw=cause lnt=NN lnw=syndrome lbnt=NN lbnw=syndrome rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBP lpw=cause lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=regulate lnt=. lnw=. lbnt=WDT lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBP lpw=cause lnt='' lnw='' lbnt='' lbnw='' rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=VB lpw=regenerate lnt=CC lnw=or lbnt=CC lbnw=or rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=`` lpw=`` lnt=MD lnw=may lbnt=MD lbnw=may rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=In lnt=JJ lnw=daily lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=averaged rbnt=VBD rbnw=averaged htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=saw lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=under lnt=RB lnw=finally lbnt=RB lbnw=finally rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=RB lnw=finally lbnt=WDT lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=RB lnw=finally lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=was lbnt=VBN lbnw=involved rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=saw rbnt=IN rbnw=for htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Among lnt=, lnw=, lbnt=WP$ lbnw=whose rpt=, rpw=, rnt=VBD rnw=saw rbnt=IN rbnw=for htsNNS,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=IN lpw=of lnt=VBD lnw=rose lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=: lpw=; lnt=VBD lnw=rose lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=TO lpw=to lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=VBD lpw=added lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=VBD lnw=added lbnt=VBD lbnw=added rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Among lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=leapt rbnt=VBD rbnw=leapt htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=gained lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=expects rbnt=VBZ rbnw=expects htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=assuming lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBZ rnw=expects rbnt=VBZ rbnw=expects htsNN,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=rose rbnt=VBD rbnw=rose htsNN,NNPS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNPS rnw=ADRs rbnt=NNPS rbnw=ADRs htsNN,NNP]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=NN lpw=target lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=tumbled rbnt=VBD rbnw=tumbled htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNS rnw=shares rbnt=NNS rbnw=shares htsNN,NNP]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=NN lnw=decision lbnt=NN lbnw=decision rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=said lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt='' lpw='' lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=VBD rbnw=had htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Until lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=rarely rbnt=RB rbnw=rarely htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=against htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=forces lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=against htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=forces lbnt=VBZ lbnw=forces rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=against htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=against lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=against rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=forces lbnt=VBZ lbnw=forces rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=added lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=red-flag lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=asking lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=WP rbnw=who htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=WP rbnw=who htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=told rbnt=IN rbnw=of htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=VBN lbnw=sent rpt=, rpw=, rnt=VBD rnw=told rbnt=IN rbnw=of htsNNS,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=asked rbnt=VBD rbnw=asked htsNNS,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=about lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=could rbnt=MD rbnw=could htsNNS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBP lpw=provide lnt=, lnw=, lbnt=IN lbnw=about rpt=, rpw=, rnt=MD rnw=could rbnt=MD rbnw=could htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=RB lpw=not lnt=. lnw=. lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=into lnt=IN lnw=with lbnt=IN lbnw=with rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBP lnw=ease lbnt=VBP lbnw=ease rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=On lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=called rbnt=VBD rbnw=called htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=rejected rbnt=VBD rbnw=rejected htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=involves lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=involves lbnt=VBZ lbnw=involves rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=RB lnw=also lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=NN lnw=attorney lbnt=NN lbnw=attorney rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=seeks rbnt=VBZ rbnw=seeks htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBZ rnw=seeks rbnt=VBZ rbnw=seeks htsNN,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=NN lpw=press lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=IN rnw=after rbnt=IN rbnw=after htsNNP,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=But lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=VBN rbnw=appointed htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBN lpw=charged lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=became lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=since htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=IN lnw=from lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=buy lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VB lpw=buy lnt=IN lnw=from lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=said lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=But lnt=VBZ lnw=is lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=lost rbnt=VBD rbnw=lost htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=made rbnt=VBD rbnw=made htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBD rnw=made rbnt=VBD rbnw=made htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=made rbnt=VBD rbnw=made htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=on lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=NNP rbnw=Fujitsu htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=slashing lnt=. lnw=. lbnt=IN lbnw=on rpt=: rpw=-- rnt=. rnw=. rbnt=NNP rbnw=Fujitsu htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=accused lnt=IN lnw=of lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=NNP rbnw=Fujitsu htsNNS,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=: rpw=-- rnt=. rnw=. rbnt=NNP rbnw=Fujitsu htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=IN lnw=in lbnt=IN lbnw=in rpt=: rpw=-- rnt=. rnw=. rbnt=NNP rbnw=Fujitsu htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=hurt lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=RB lpw=Then lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNP]
same [default sim.compatible gen.unknown num.compatible lpt='' lpw='' lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=at htsNN,NN]
same [default sim.compatible gen.unknown num.compatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=also rbnt=RB rbnw=also htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=IN lnw=from lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=bought lnt=IN lnw=from lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=RB lnw=also lbnt=RB lbnw=also rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=from lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=from rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBN lpw=been lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=Over lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=JJ lnw=primary lbnt=JJ lbnw=primary rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=from lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=from rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBN lpw=been lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=Over lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=indicate rbnt=IN rbnw=for htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=As lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=VBG lpw=counting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=RB lpw=now lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=than lnt=CC lnw=and lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=RBR lnw=more lbnt=RBR lbnw=more rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=, lbnw=, rpt=, rpw=, rnt=-RRB- rnw=) rbnt=-RRB- rbnw=) htsNNP,NNP]
same [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=-- lnt=VBD lnw=was lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=note rbnt=VBP rbnw=note htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=is lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=NN lpw=trading lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNN,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=NNP lpw=Tokyo lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=opened rbnt=VBD rbnw=opened htsNNP,NN]
same [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=traced lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=with htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBN rnw=settled rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=NNP lpw=Kong lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=was rbnt=VBD rbnw=was htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=NN lnw=distributor lbnt=NN lbnw=distributor rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBZ lnw=is lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBP lnw=say lbnt=VBP lbnw=say rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBP lnw='re lbnt=VBP lbnw='re rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBP lnw=say lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=as lnt=VBP lnw=say lbnt=VBP lbnw=say rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=VBP lnw=say lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=at lnt=VBP lnw=say lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=CC lpw=And lnt=VBP lnw=say lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt='' lpw='' lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.unknown num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt='' lpw='' lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=IN rbnw=of htsNNP,NN]
same [default sim.unknown gen.unknown num.compatible lpt=IN lpw=of lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBZ lnw=says lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNN,NN]
same [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=VBP rnw=are rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBP rnw=are rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=made rbnt=VBD rbnw=made htsNNP,NNP]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=like lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=on htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=IN lbnw=like rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=on htsNNS,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBZ lpw=combines lnt=, lnw=, lbnt=IN lbnw=on rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=on htsNNS,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=combines lbnt=VBZ lbnw=combines rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=on htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=From lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=under lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=With lnt=, lnw=, lbnt=IN lbnw=under rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=NN lnw=polystyrene lbnt=NN lbnw=polystyrene rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=with lnt=. lnw=. lbnt=VBG lbnw=pointing rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=IN lnw=with lbnt=IN lbnw=with rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=ran lnt=. lnw=. lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=NNS lnw=editors lbnt=NNS lbnw=editors rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNN,NNS]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=ran lbnt=VBD lbnw=ran rpt=: rpw=-- rnt=. rnw=. rbnt=PRP rbnw=they htsNNS,NNS]
diff [default sim.compatible gen.compatible num.unknown lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VB lpw=make lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=if lnt=VBP lnw='re lbnt=VBP lbnw='re rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsPRP,NN]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=in lnt=NN lnw=magazine lbnt=NN lbnw=magazine rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsPRP$,NN]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=of lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.compatible gen.incompatible num.unknown some.incompatible lpt=VBP lpw=need lnt=TO lnw=to lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=`` lpw=`` lnt=RB lnw=really lbnt=RB lbnw=really rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsPRP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=IN lnw=at lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VB lpw=make lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=if lnt=VBP lnw='re lbnt=VBP lbnw='re rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=NN lnw=magazine lbnt=NN lbnw=magazine rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=VBP lpw=need lnt=TO lnw=to lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=RB lnw=really lbnt=RB lbnw=really rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=like lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.compatible gen.unknown num.unknown lpt=IN lpw=like lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=from lnt=. lnw=. lbnt=IN lbnw=like rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=but lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNN,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=including lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.compatible gen.incompatible num.unknown some.incompatible lpt=VBG lpw=including lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=from lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=featured lnt=, lnw=, lbnt=IN lbnw=from rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=featured lbnt=VBD lbnw=featured rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNS,NNS]
same [default sim.compatible gen.compatible num.unknown lpt=CC lpw=But lnt=VBZ lnw=contends lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=printed rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=printed lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=replies rbnt=VBZ rbnw=replies htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNS]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNS]
same [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=with lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=by lnt=NNP lnw=E.C. lbnt=NNP lbnw=E.C. rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=by lnt=. lnw=. lbnt=IN lbnw=along rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=: lnt=VBD lnw=named lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=named lnt=IN lnw=as lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=: lnt=VBD lnw=named lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=by lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=had lbnt=VBD lbnw=had rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=: lnt=NNP lnw=General lbnt=NNP lbnw=General rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=: lnt=VBD lnw=awarded lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=for lnt=NNP lnw=Fax lbnt=NNP lbnw=Fax rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=awarded lnt=TO lnw=to lbnt=IN lbnw=for rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=: lnt=NNP lnw=General lbnt=NNP lbnw=General rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=for lnt=NNP lnw=Fax lbnt=NNP lbnw=Fax rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=for lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=awarded lnt=TO lnw=to lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=: lpw=: lnt=NNP lnw=General lbnt=NNP lbnw=General rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=by lnt=DT lnw=the lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=pitches rbnt=VBZ rbnw=pitches htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNPS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=completed lnt=NN lnw=acquisition lbnt=NN lbnw=acquisition rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=completed lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=: lnt=VBD lnw=acquired lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNPS,NNP]
same [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=acquired lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=: lpw=: lnt=VBD lnw=acquired lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNPS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNPS,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=IN lpw=by lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=RP lpw=off lnt=. lnw=. lbnt=IN lbnw=by rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=through lnt=RB lnw=jointly lbnt=RB lbnw=jointly rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=through lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=sweetened rbnt=VBD rbnw=sweetened htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=JJ rnw=chief rbnt=JJ rbnw=chief htsNN,NNPS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=JJ lnw=chief lbnt=JJ lbnw=chief rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNPS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=under lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNN,NNPS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=NN lpw=trading lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=closed rbnt=VBD rbnw=closed htsNN,NNPS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=VBD rbnw=had htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=address lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=be lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=-RRB- rnw=) rbnt=-RRB- rbnw=) htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=During lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=could rbnt=MD rbnw=could htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=for lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBN rnw=acquired rbnt=VBN rbnw=acquired htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBZ lnw=joins lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=approved rbnt=VBD rbnw=approved htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=told lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=reported rbnt=VBD rbnw=reported htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=`` lnw=`` lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=upon lnt=`` lnw=`` lbnt=IN lbnw=with rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=NN lnw=decision lbnt=NN lbnw=decision rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=said lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt='' lpw='' lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=WRB lpw=When lnt=VBD lnw=announced lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=NNP lpw=Cabernet lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=balked rbnt=IN rbnw=around htsNN,NNS]
same [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=VBN rbnw=limited htsNNS,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=is lnt=. lnw=. lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=VBN rbnw=limited htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=: rpw=-- rnt=. rnw=. rbnt=VBN rbnw=limited htsNN,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=VBZ lnw=is lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=VBN rbnw=limited htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=included rbnt=VBD rbnw=included htsNNS,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=VBD lnw=included lbnt=VBD lbnw=included rpt=: rpw=-- rnt=, rnw=, rbnt=-LRB- rbnw=( htsNN,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=-LRB- rbnw=( htsNNS,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=: lpw=-- lnt=, lnw=, lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=JJ rnw=deluxe rbnt=-LRB- rbnw=( htsNNS,NNPS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=CC lpw=or lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=CC lnw=or lbnt=CC lbnw=or rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=-RRB- lpw=) lnt=, lnw=, lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=, lpw=, lnt=JJ lnw=deluxe lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNPS,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNP,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=-- lnt=, lnw=, lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=: lbnw=-- rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=included lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=included lbnt=VBD lbnw=included rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNS,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBP lpw=are lnt=-LRB- lnw=( lbnt=DT lbnw=each rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=from lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=JJ lnw=first lbnt=JJ lbnw=first rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=are lbnt=IN lbnw=from rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=RB lnw=now lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CD lpw=125 lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=DT lbnw=a rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=is lnt=, lnw=, lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=From lnt=RB lnw=there lbnt=RB lbnw=there rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CD lpw=125 lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=La rbnt=NNP rbnw=La htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=DT lbnw=a rpt=, rpw=, rnt=NNP rnw=La rbnt=NNP rbnw=La htsCD,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=is lnt=, lnw=, lbnt=IN lbnw=at rpt=, rpw=, rnt=NNP rnw=La rbnt=NNP rbnw=La htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=NNP lnw=La lbnt=NNP lbnw=La rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CD lpw=125 lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=DT lbnw=a rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsCD,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=is lnt=, lnw=, lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=From lnt=RB lnw=there lbnt=RB lbnw=there rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=continued rbnt=VBD rbnw=continued htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBN lpw=exhausted lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=continued rbnt=VBD rbnw=continued htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=VBD lpw=thought lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=at htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=`` lpw=`` lnt=VBD lnw=thought lbnt=VBD lbnw=thought rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=at htsPRP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=CD lnw=one lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=thought lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNN,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NNP rnw=Leap rbnt=NNP rbnw=Leap htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=expecting lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBP lpw=think lnt=VBD lnw=had lbnt=VBD lbnw=had rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=including lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=noted lbnt=VBD lbnw=noted rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBD lnw=noted lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NNS]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=As lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=may rbnt=MD rbnw=may htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=Under lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=MD rbnw=will htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=owns lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=VBD lnw=began lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=VBD lnw=began lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=said lnt=VBD lnw=began lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Without lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=ca rbnt=MD rbnw=ca htsNN,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=VBG lpw=cutting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=over rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=over lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=despite lnt=, lnw=, lbnt=IN lbnw=over rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=avoid lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NN]
same [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=MD lnw=will lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=clearing lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=through lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=. lpw=. lnt=MD lnw=could lbnt=MD lbnw=could rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=IN rbnw=in htsNNS,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=through lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=estimates rbnt=VBZ rbnw=estimates htsCD,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBZ rnw=estimates rbnt=VBZ rbnw=estimates htsNNS,NNP]
same [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=VBZ lnw=has lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=VBN lnw=based lbnt=VBN lbnw=based rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=of lnt=VBN lnw=based lbnt=VBN lbnw=based rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=has lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBZ lpw=has lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=NNP lnw=Beige lbnt=NNP lbnw=Beige rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=indicated lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=IN lpw=that lnt=MD lnw=wo lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VBD lpw=saw lnt=RB lnw=as lbnt=RB lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=. lpw=. lnt=VBD lnw=saw lbnt=VBD lbnw=saw rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=like lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=NN lnw=ankle lbnt=NN lbnw=ankle rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsPRP$,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=on lnt=IN lnw=like lbnt=IN lbnw=like rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=`` lpw=`` lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsPRP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=asked rbnt=VBD rbnw=asked htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBD rnw=asked rbnt=VBD rbnw=asked htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=DT lnw=the lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=DT lnw=the lbnt=DT lbnw=the rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=Although lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=apparently rbnt=RB rbnw=apparently htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=earned rbnt=VBD rbnw=earned htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=IN rbnw=of htsCD,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBZ lpw=seeks lnt=, lnw=, lbnt=IN lbnw=from rpt=, rpw=, rnt=CC rnw=and rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=filed rbnt=VBD rbnw=filed htsNNP,NNP]
same [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=against lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=IN lnw=against lbnt=IN lbnw=against rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=filed lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBD lnw=filed lbnt=VBD lbnw=filed rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=In lnt=DT lnw=a lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=declined rbnt=VBD rbnw=declined htsNNP,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=JJ lnw=own lbnt=JJ lbnw=own rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=for rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=see lnt=IN lnw=as lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
same [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=TO lnw=to lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=`` lpw=`` lnt=VBP lnw=believe lbnt=VBP lbnw=believe rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=WRB lpw=when lnt=VBP lnw=are lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=TO lpw=to lnt=WRB lnw=when lbnt=WRB lbnw=when rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=paying lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=chastised lnt=IN lnw=for lbnt=IN lbnw=for rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=chastised lbnt=VBD lbnw=chastised rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=. lnw=. lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=NN lnw=acquisition lbnt=NN lbnw=acquisition rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=from lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=IN lnw=from lbnt=IN lbnw=from rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=NN lnw=purchase lbnt=NN lbnw=purchase rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=CC lnw=and lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=. lnw=. lbnt=. lbnw=. rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=RP lpw=up lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=that lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=added lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=IN rbnw=of htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=IN lnw=of lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=by lnt=. lnw=. lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=had lbnt=VBD lbnw=had rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBD lnw=had lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=added lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=before lnt=VBD lnw=added lbnt=VBD lbnw=added rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=acquired lnt=. lnw=. lbnt=VBN lbnw=valued rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=has lbnt=VBZ lbnw=has rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=JJ lnw=last lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=JJ lnw=last lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=urged rbnt=VBD rbnw=urged htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=will rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=get lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=MD rnw=will rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=Among lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=After lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=complained rbnt=VBD rbnw=complained htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=take lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNN,NNS]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=about lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNNS,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=JJ rnw=big rbnt=JJ rbnw=big htsNNP,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=about lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=JJ rnw=big rbnt=JJ rbnw=big htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=improves rbnt=VBZ rbnw=improves htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=penetrate lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=turned rbnt=VBD rbnw=turned htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBG lpw=facing lnt=, lnw=, lbnt=VBG lbnw=trying rpt=, rpw=, rnt=VBD rnw=turned rbnt=VBD rbnw=turned htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=clear lnt=, lnw=, lbnt=VBG lbnw=facing rpt=, rpw=, rnt=VBD rnw=turned rbnt=VBD rbnw=turned htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=guided rbnt=VBD rbnw=guided htsNN,NNP]
same [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=for lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=VBD lpw=secured lnt=. lnw=. lbnt=IN lbnw=for rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=RB lnw=eventually lbnt=RB lbnw=eventually rpt=: rpw=-- rnt=. rnw=. rbnt=. rbnw=. htsPRP,NNS]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=had rbnt=VBD rbnw=had htsNN,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=so lnt=VBD lnw=went lbnt=VBD lbnw=went rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=as lnt=IN lnw=so lbnt=IN lbnw=so rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=invested rbnt=VBD rbnw=invested htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=invested lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsCD,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBD lnw=invested lbnt=VBD lbnw=invested rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=RB lnw=alone lbnt=RB lbnw=alone rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=from htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=was lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=bought rbnt=, rbnw=, htsNN,NNP]
same [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=bought lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NN]
same [default sim.compatible gen.compatible num.unknown lpt=IN lpw=with lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=in lnt=. lnw=. lbnt=IN lbnw=with rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=in lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VBD lpw=bought lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=NNP lpw=Mitsubishi lnt=, lnw=, lbnt=IN lbnw=on rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=give lnt=DT lnw=a lbnt=DT lbnw=a rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=as lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=VBG lnw=using lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNN,NN]
same [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=Adds lnt=: lnw=: lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=: rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=RB lbnw=often rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw='s lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=Unlike lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBP rnw=are rbnt=VBP rbnw=are htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=BOS lpw=BOS lnt=NN lnw=president lbnt=NN lbnw=president rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=resigned lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=provides lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=went rbnt=VBD rbnw=went htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=introduced rbnt=VBD rbnw=introduced htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=introduced lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=introduced lbnt=VBD lbnw=introduced rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NNS]
same [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=segmenting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=if lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=IN lnw=if lbnt=IN lbnw=if rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=segmenting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=if lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsPRP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=IN lnw=if lbnt=IN lbnw=if rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=RB lnw=recently lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=RB lnw=recently lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=launched rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=VBD lnw=launched lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=launched lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=launched lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=launched lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=launched lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=VBN rbnw=designed htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NNS]
same [default sim.unknown gen.unknown num.compatible lpt=IN lpw=at lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsJJ,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=VBG lpw=aiming lnt=IN lnw=at lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsNNS,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=, lpw=, lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=with htsNN,NN]
same [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=says rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=VBZ lnw=says lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=VBZ lnw=says lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=IN lnw=at lbnt=IN lbnw=at rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=says lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=`` lpw=`` lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=launched rbnt=IN rbnw=of htsCD,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=VBD lpw=included lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=launched lbnt=VBD lbnw=launched rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=launched lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBN rnw=switched rbnt=VBN rbnw=switched htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=offering lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=IN rbnw=of htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBZ lpw=runs lnt=IN lnw=in lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=over lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=spread lnt=IN lnw=over lbnt=IN lbnw=over rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=`` lpw=`` lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=For lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=get rbnt=VBP rbnw=get htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=NNS lbnw=customers rpt=, rpw=, rnt=VBZ rnw=says rbnt=VBZ rbnw=says htsNNS,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VB lpw=introduce lnt=NNP lnw=ChemPlus lbnt=NNP lbnw=ChemPlus rpt=, rpw=, rnt=, rnw=, rbnt=VBN rbnw=aimed htsPRP$,NNS]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=VB lpw=introduce lnt=IN lnw=in lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=VBN rbnw=aimed htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=spent lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=, rnw=, rbnt=VBN rbnw=aimed htsCD,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=VBN lbnw=aimed rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=introduce lnt=NNP lnw=ChemPlus lbnt=NNP lbnw=ChemPlus rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=introduce lnt=IN lnw=in lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=spent lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=walk rbnt=VBP rbnw=walk htsNNS,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=by lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=MD lnw=will lbnt=MD lbnw=will rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=As lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=! lnt=, lnw=, lbnt=PRP lbnw=you rpt=, rpw=, rnt=VBZ rnw=grows rbnt=: rbnw=-- htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=! lnt=, lnw=, lbnt=PRP lbnw=you rpt=, rpw=, rnt=NN rnw=health rbnt=NN rbnw=health htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CD lpw=15,000 lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=. lnw=. lbnt=DT lbnw=a rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsCD,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=NN lpw=good lnt=MD lnw=can lbnt=MD lbnw=can rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=about lnt=. lnw=. lbnt=PRP lbnw=you rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=fell lnt=. lnw=. lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=RB lpw=once lnt=VBD lnw=fell lbnt=VBD lbnw=fell rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=RB lnw=once lbnt=CD lbnw=500 rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=take lnt=IN lnw=in lbnt=IN lbnw=in rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=said lnt=MD lnw=would lbnt=MD lbnw=would rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=said lbnt=VBD lbnw=said rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=angered rbnt=VBD rbnw=angered htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=angered lnt=NN lnw=chairman lbnt=NN lbnw=chairman rpt=, rpw=, rnt=, rnw=, rbnt=-LRB- rbnw=( htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=angered lnt=IN lnw=by lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=-LRB- rbnw=( htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=angered lbnt=VBD lbnw=angered rpt=, rpw=, rnt=, rnw=, rbnt=-LRB- rbnw=( htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=-LRB- rbnw=( htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=, lbnw=, rpt=, rpw=, rnt=-RRB- rnw=) rbnt=-RRB- rbnw=) htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=added rbnt=VBD rbnw=added htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=writing lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBD rnw=added rbnt=VBD rbnw=added htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=during lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=asked rbnt=VBD rbnw=asked htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBD lpw=annoyed lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBD lpw=attended lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=VBD lnw=attended lbnt=VBD lbnw=attended rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsNNS,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=attended lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=-LRB- rbnw=( htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=, lbnw=, rpt=, rpw=, rnt=-RRB- rnw=) rbnt=-RRB- rbnw=) htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=, lpw=, lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.unknown num.unknown lpt=-LRB- lpw=( lnt=-RRB- lnw=) lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NN]
same [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=. lnw=. lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=VBD lpw=attended lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=of lnt=VBD lnw=attended lbnt=VBD lbnw=attended rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsNNS,NN]
diff [default sim.unknown gen.unknown num.unknown lpt=. lpw=. lnt=VBD lnw=attended lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=, rbnw=, htsCD,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt='' lpw='' lnt=: lnw=-- lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=-- rbnt=: rbnw=-- htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=amid lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBG rnw=cascading rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=pull rbnt=VBP rbnw=pull htsNN,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=once rbnt=RB rbnw=once htsNNS,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=RB rnw=once rbnt=RB rbnw=once htsNNS,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=RB rnw=once rbnt=RB rbnw=once htsNNS,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.unknown gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=IN lnw=at lbnt=IN lbnw=at rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=requires lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=DT rbnw=the htsNN,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=TO lpw=to lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=VBG rbnw=using htsJJS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=from lnt=TO lnw=to lbnt=TO lbnw=to rpt=: rpw=-- rnt=. rnw=. rbnt=VBG rbnw=using htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=VBG rbnw=using htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=: rpw=-- rnt=. rnw=. rbnt=VBG rbnw=using htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=: lpw=-- lnt=. lnw=. lbnt=VBG lbnw=using rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=TO lpw=to lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsJJS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=from lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=begin rbnt=VBP rbnw=begin htsNN,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=ahead rbnt=RB rbnw=ahead htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=swing rbnt=, rbnw=, htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBG lpw=involving lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=described rbnt=VBD rbnw=described htsNNS,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=VBG lbnw=involving rpt=, rpw=, rnt=VBD rnw=described rbnt=VBD rbnw=described htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=VBZ lpw=admits lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=become lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=RP lpw=up lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=often rbnt=RB rbnw=often htsNN,NNS]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=got lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=At lnt=NNP lnw=Church lbnt=NNP lbnw=Church rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=At lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNP,NNS]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNP,NNS]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=At lnt=, lnw=, lbnt=IN lbnw=in rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNP,NNS]
same [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=VBZ lnw=refuses lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=But lnt=VBZ lnw=feels lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBZ lnw=aims lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=improve lnt=, lnw=, lbnt=IN lbnw=with rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=WDT rbnw=that htsNN,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=IN lpw=for lnt=JJS lnw=most lbnt=JJS lbnw=most rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
same [default sim.compatible gen.compatible num.unknown lpt=IN lpw=for lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.unknown gen.incompatible num.unknown some.incompatible lpt=IN lpw=of lnt=IN lnw=for lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=VBZ lpw=is lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=TO lpw=to lnt=IN lnw=because lbnt=IN lbnw=because rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=. lnw=. lbnt=WDT lbnw=that rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=being lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=has rbnt=VBZ rbnw=has htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBN rnw=observed rbnt=IN rbnw=from htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=warn rbnt=VBP rbnw=warn htsNNS,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VB lpw=signal lnt=, lnw=, lbnt=RB lbnw=ahead rpt=, rpw=, rnt=VBP rnw=warn rbnt=VBP rbnw=warn htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=be lnt=IN lnw=for lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt='' lnw='' lbnt='' lbnw='' rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBZ lpw=is lnt=. lnw=. lbnt=IN lbnw=of rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBZ lnw=says lbnt=VBZ lbnw=says rpt=: rpw=-- rnt=. rnw=. rbnt=TO rbnw=to htsPRP,NN]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBZ lnw=explains lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=soared rbnt=IN rbnw=on htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=As lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=has rbnt=: rbnw=-- htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=As lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=dividend rbnt=NN rbnw=dividend htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=Put lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=suggests rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=VBZ lpw=says lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBN lpw=been lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=for lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=found rbnt=VBD rbnw=found htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBN lpw=been lnt=, lnw=, lbnt=: lbnw=-- rpt=, rpw=, rnt=VBD rnw=found rbnt=VBD rbnw=found htsNNS,NNP]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=because lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=RB lpw=not lnt=RB lnw=currently lbnt=RB lbnw=currently rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw='s lbnt=VBZ lbnw='s rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=for lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=IN lnw=for lbnt=IN lbnw=for rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBZ lpw=says lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=because lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RB lpw=not lnt=RB lnw=currently lbnt=RB lbnw=currently rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=`` lpw=`` lnt=VBZ lnw='s lbnt=VBZ lbnw='s rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=increasing lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=VBZ lpw=notes lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=NNS lnw=shares lbnt=NNS lbnw=shares rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsPRP$,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=used lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNN,NN]
diff [default sim.compatible gen.unknown num.incompatible some.incompatible lpt=VBG lpw=increasing lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=of htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBN lpw=been lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=: rnw=-- rbnt=DT rbnw=the htsNNS,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=In lnt=: lnw=-- lbnt=IN lbnw=in rpt=: rpw=-- rnt=: rnw=-- rbnt=DT rbnw=the htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=from lnt=, lnw=, lbnt=DT lbnw=a rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsCD,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=could rbnt=IN rbnw=in htsNNS,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=measure lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=MD rnw=could rbnt=IN rbnw=in htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=is rbnt=VBZ rbnw=is htsNN,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=NN lnw=father-in-law lbnt=NN lbnw=father-in-law rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=by lnt=NN lnw=grandfather lbnt=NN lbnw=grandfather rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
same [default sim.unknown gen.unknown num.compatible lpt=IN lpw=by lnt=WDT lnw=which lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=VBD lpw=sued lnt=VBG lnw=claiming lbnt=VBG lbnw=claiming rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=acquired lnt=NN lnw=microphone lbnt=NN lbnw=microphone rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBD lpw=acquired lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=VBD lnw=acquired lbnt=VBD lbnw=acquired rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=before lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=dropped rbnt=VBD rbnw=dropped htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=enter lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=dropped lnt=CC lnw=and lbnt=CC lbnw=and rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=VBD lnw=dropped lbnt=VBD lbnw=dropped rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=before lnt=NN lnw=application lbnt=NN lbnw=application rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=before lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=VBN lpw=registered lnt=IN lnw=before lbnt=IN lbnw=before rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=that lnt=VBD lnw=was lbnt=VBD lbnw=was rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=WRB lpw=When lnt=VBD lnw=established lbnt=VBD lbnw=established rpt=: rpw=-- rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VB lpw=eliminate lnt=, lnw=, lbnt=IN lbnw=at rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=NN lpw=trading lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=closed rbnt=VBD rbnw=closed htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBD lnw=harped lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=TO rbnw=to htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=RB lnw=even lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=reminded lnt=NN lnw=host lbnt=NN lbnw=host rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=reminded lnt=IN lnw=that lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=expressed rbnt=VBD rbnw=expressed htsNNP,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=with rpt=, rpw=, rnt=VBD rnw=expressed rbnt=VBD rbnw=expressed htsNNS,NNS]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=NN lpw=meeting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=told rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=VBD lnw=told lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=NN lpw=meeting lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=In lnt=NNP lnw=Tuesday lbnt=NNP lbnw=Tuesday rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=still rbnt=RB rbnw=still htsNNS,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=IN lpw=Despite lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=NN lnw=wife lbnt=NN lbnw=wife rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=took lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=WRB lpw=when lnt=VBD lnw=took lbnt=VBD lbnw=took rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=between lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=between lnt=VBP lnw=have lbnt=VBP lbnw=have rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt='' lpw='' lnt=VBP lnw=have lbnt=IN lbnw=between rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=JJ lnw=national lbnt=JJ lbnw=national rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=IN lnw=before lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=VBD lpw=met lnt=IN lnw=before lbnt=IN lbnw=before rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=. lpw=. lnt=VBD lnw=met lbnt=VBD lbnw=met rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=raised rbnt=VBD rbnw=raised htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=raised rbnt=VBD rbnw=raised htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=included lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNS,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=IN lpw=in lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=VB lpw=restore lnt=NN lnw=participation lbnt=NN lbnw=participation rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsPRP$,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VB lpw=restore lnt=. lnw=. lbnt=IN lbnw=in rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=RB lnw=also lbnt=RB lbnw=also rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=urged rbnt=VBD rbnw=urged htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBZ rnw=appears rbnt=VBZ rbnw=appears htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=on lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=IN lbnw=with rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=RB rnw=also rbnt=VBG rbnw=encircling htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NNS]
same [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=VBZ lnw=believes lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=Among lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NN]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=IN lpw=Among lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNNS,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBP rnw=have rbnt=VBP rbnw=have htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=BOS lpw=BOS lnt=VBD lnw=disciplined lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=were lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=were lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RB lpw=n't lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=were rbnt=IN rbnw=of htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=were lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=were rbnt=IN rbnw=of htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=VBD rnw=were rbnt=IN rbnw=of htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=VBD lnw=were lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=were lbnt=IN lbnw=of rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=RB lpw=n't lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=were rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=were lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=were rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=VBD rnw=were rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=consented rbnt=VBD rbnw=consented htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=VBG lpw=denying lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=consented lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=consented rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=consented lbnt=VBD lbnw=consented rpt=, rpw=, rnt=VBD rnw=consented rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=VBD lnw=consented lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=, lpw=, lnt=VBD lnw=consented lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=CC lpw=and lnt=NN lnw=president lbnt=NN lbnw=president rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=consented lbnt=VBD lbnw=consented rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=NN lnw=president lbnt=NN lbnw=president rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=VBD lnw=consented lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=consented lbnt=VBD lbnw=consented rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=CC lnw=and lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=of lnt=NNS lnw=principals lbnt=NNS lbnw=principals rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.compatible gen.compatible num.unknown lpt=IN lpw=of lnt=: lnw=-- lbnt=: lbnw=-- rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=: rpw=-- rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=-- lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=: lpw=-- lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=NNS lnw=principals lbnt=NNS lbnw=principals rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP$,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=: lnw=-- lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=-- rbnt=: rbnw=-- htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=-- lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=-- rbnt=: rbnw=-- htsNNP,NNP]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=: lpw=-- lnt=: lnw=-- lbnt=: lbnw=-- rpt=, rpw=, rnt=: rnw=-- rbnt=: rbnw=-- htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=described lnt=IN lnw=as lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=described lbnt=VBD lbnw=described rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsPRP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=VBD lnw=were lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=consented rbnt=VBD rbnw=consented htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=$ rnw=$ rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=$ rnw=$ rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=$ rnw=$ rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=$ rnw=$ rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=VB lpw=disgorge lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=: lnw=; lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=suspended lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=: lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsVBG,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=: lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsVBG,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsVBG,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
same [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=: lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsVBG,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=VBN lpw=fined lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsVBG,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VB lpw=disgorge lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBN lpw=fined lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=: lnt=VBN lnw=fined lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.compatible num.compatible lpt=. lpw=. lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsVBG,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=. lpw=. lnt=VBD lnw=said lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=in htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt='' lpw='' lnt=VBD lnw=were lbnt=VBD lbnw=were rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=IN lnw=without lbnt=IN lbnw=without rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=: lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBG lpw=denying lnt=: lnw=: lbnt=: lbnw=: rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.unknown num.incompatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=$ rnw=$ rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=as lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=IN lbnw=as rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=CC rnw=and rbnt=CC rbnw=and htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=: rnw=; rbnt=: rbnw=; htsNNP,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=CC lpw=and lnt=JJ lnw=two-year lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.unknown num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.unknown num.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.unknown gen.unknown num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=JJ lnw=two-year lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsCD,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.unknown some.incompatible lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNN,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=CC lpw=and lnt=JJ lnw=two-year lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsCD,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=CC lpw=and lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=, lpw=, lnt=CC lnw=and lbnt=CC lbnw=and rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=, lpw=, lnt=: lnw=; lbnt=: lbnw=; rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=, lpw=, lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=: lpw=; lnt=$ lnw=$ lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=. rbnw=. htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=VBZ lpw=plays lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.unknown some.incompatible lpt=IN lpw=in lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=say rbnt=VBP rbnw=say htsNNP,NNS]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=about lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBP rnw=do rbnt=VBP rbnw=do htsNN,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=NN rnw=trading rbnt=NN rbnw=trading htsNN,NNS]
diff [default sim.compatible gen.unknown num.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=with lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=whether lnt=VBP lnw=are lbnt=VBP lbnw=are rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.compatible gen.compatible num.incompatible some.incompatible lpt=VBG lpw=scrutinizing lnt=NN lnw=activity lbnt=NN lbnw=activity rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNS,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=VBG lpw=scrutinizing lnt=TO lnw=to lbnt=TO lbnw=to rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=NNP lnw=Finance lbnt=NNP lbnw=Finance rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=. lpw=. lnt=RB lnw=already lbnt=RB lbnw=already rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=for htsNNP,NN]
diff [default sim.compatible gen.compatible num.unknown lpt=. lpw=. lnt=VBP lnw=have lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=, rbnw=, htsNNS,NNP]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNNS,NNS]
diff [default sim.incompatible gen.compatible num.incompatible some.incompatible lpt=TO lpw=to lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNN,NNS]
diff [default sim.incompatible gen.unknown num.incompatible some.incompatible lpt=IN lpw=In lnt=, lnw=, lbnt=TO lbnw=to rpt=, rpw=, rnt=MD rnw=can rbnt=MD rbnw=can htsNN,NNS]
diff [default sim.compatible gen.compatible num.compatible all.compatible lpt=VBD lpw=said lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=in lnt='' lnw='' lbnt='' lbnw='' rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNNP,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=`` lpw=`` lnt=VBZ lnw=is lbnt=VBZ lbnw=is rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=at htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=. lpw=. lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=totaled rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
diff [default sim.incompatible gen.incompatible num.incompatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
diff [default sim.unknown gen.incompatible num.incompatible some.incompatible lpt=VBD lpw=was lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNS]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=VBD lpw=passed lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNN,NN]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=Under lnt=, lnw=, lbnt=VBD lbnw=passed rpt=, rpw=, rnt=MD rnw=would rbnt=MD rbnw=would htsNN,NN]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=-RRB- rnw=) rbnt=-RRB- rbnw=) htsNNP,NNP]
diff [default sim.incompatible gen.compatible num.compatible some.incompatible lpt=IN lpw=at lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=IN rnw=in rbnt=IN rbnw=of htsNN,NN]
diff [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=IN lpw=of lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=IN lpw=than lnt=, lnw=, lbnt=IN lbnw=of rpt=, rpw=, rnt=VBD rnw=said rbnt=VBD rbnw=said htsNN,NNP]
diff [default sim.incompatible gen.unknown num.compatible some.incompatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=-RRB- rnw=) rbnt=-RRB- rbnw=) htsNNP,NNP]
same [default sim.unknown gen.compatible num.compatible lpt=IN lpw=of lnt=. lnw=. lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=that htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=praised lnt=NN lnw=acceptance lbnt=NN lbnw=acceptance rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=that htsNNP,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=VBD lpw=praised lnt=. lnw=. lbnt=IN lbnw=of rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=that htsNN,NN]
diff [default sim.unknown gen.compatible num.compatible lpt=, lpw=, lnt=-RRB- lnw=) lbnt=-RRB- lbnw=) rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=that htsNNP,NN]
diff [default sim.compatible gen.unknown num.compatible lpt=-LRB- lpw=( lnt=, lnw=, lbnt=, lbnw=, rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=that htsNNP,NN]
diff [default sim.unknown gen.incompatible num.compatible some.incompatible lpt=CC lpw=But lnt=RB lnw=instead lbnt=-LRB- lbnw=( rpt=, rpw=, rnt=. rnw=. rbnt=IN rbnw=that htsNNP,NN]
same [default sim.incompatible gen.incompatible num.compatible some.incompatible lpt=BOS lpw=BOS lnt=VBD lnw=received lbnt=, lbnw=, rpt=, rpw=, rnt=, rnw=, rbnt=IN rbnw=of htsNNP,NN]
